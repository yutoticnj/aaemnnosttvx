name: Run Barcelona-Watch

on:
  schedule:
    - cron: "0 5 * * *" # Run daily at midnight (adjust as needed)
  workflow_dispatch: # Allow manual triggering

jobs:
  run-barcelona-watch:
    runs-on: ubuntu-latest

    env:
      LOG_FILE: barcelona_watch_log.log
      SCRIPT_PATH: ${{ github.workspace }}

    steps:
      # Step 1: Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      # Step 2: Set up Go
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.21

      # Step 3: Install dependencies
      - name: Install dependencies
        run: |
          go mod tidy

      # Step 4: Create .env file in the repository root
      - name: Create .env file
        run: |
          echo "API_KEY=${{ secrets.API_KEY }}" >> $GITHUB_WORKSPACE/.env
          echo "TELEGRAM_BOT_TOKEN=${{ secrets.TELEGRAM_BOT_TOKEN }}" >> $GITHUB_WORKSPACE/.env
          echo "TELEGRAM_CHANNEL_ID=${{ secrets.TELEGRAM_CHANNEL_ID }}" >> $GITHUB_WORKSPACE/.env
          echo "CHAT_ID=${{ secrets.CHAT_ID }}" >> $GITHUB_WORKSPACE/.env
          echo "MESSAGE_THREAD_ID=${{ secrets.MESSAGE_THREAD_ID }}" >> $GITHUB_WORKSPACE/.env

      # Step 5: Check if script ran today
      - name: Check if script ran today
        id: check_run
        run: |
          TODAY=$(date '+%Y-%m-%d')
          if grep -q "$TODAY" "$LOG_FILE"; then
            echo "already_ran=true" >> $GITHUB_ENV
          else
            echo "already_ran=false" >> $GITHUB_ENV
          fi

      # Step 6: Skip if already ran today
      - name: Skip if already ran today
        if: env.already_ran == 'true'
        run: echo "Script already ran today, skipping execution."

      # Step 7: Run the barcelona-watch script and log output
      - name: Run barcelona-watch
        id: run-barcelona-watch
        if: env.already_ran == 'false'
        run: |
          # Run the Go script and capture both output and error in a log file
          go run main.go > output.log 2>&1
          exit_status=$?
          if [ $exit_status -eq 0 ]; then
            echo "Barcelona-watch completed successfully on $(date '+%Y-%m-%d')" >> "$LOG_FILE"
          else
            echo "Barcelona-watch failed on $(date '+%Y-%m-%d'). Check output.log for details." >> "$LOG_FILE"
            echo "::set-output name=error_message::Barcelona-Watch failed with exit code $exit_status"
            cat output.log  # Print the output log to the action logs for better debugging
            exit 1
          fi

      # Step 8: Notify Error Alarm Channel on failure
      - name: Notify Error Alarm Channel
        if: failure()
        run: |
          curl -s -X POST "https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage" \
          -d chat_id=${{ secrets.ERROR_ALARM_CHANNEL_ID }} \
          -d text="Error in Barcelona-Watch: ${{ steps.run-barcelona-watch.outputs.error_message }}"

      # Step 9: Commit and push log file
      - name: Commit and push log file
        if: env.already_ran == 'false'
        run: |
          git config user.name "blackvoidx"
          git config user.email "anonymous@example.com"
          git add "$LOG_FILE" liga-table.log
          git commit -m "Update log file for $(date '+%Y-%m-%d')"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
